name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x]  # Simplified to single version for now
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        # Remove cache option until we have a lock file
        
    - name: Initialize npm project
      run: |
        # Initialize if package.json doesn't exist
        if [ ! -f package.json ]; then
          npm init -y
        fi
    
    - name: Install dependencies
      run: |
        # Install basic dependencies
        npm install
        # Generate package-lock.json
        npm install --package-lock-only
        
    - name: Install ESLint
      run: npm install eslint --save-dev
        
    - name: Run linting
      run: |
        # Create basic ESLint config if it doesn't exist
        if [ ! -f .eslintrc.js ]; then
          npx eslint --init
        fi
        npx eslint . --ext .js || true  # Don't fail on lint errors initially
        
    - name: Build
      run: npm run build --if-present

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to production
      run: |
        echo "Add your deployment commands here"
